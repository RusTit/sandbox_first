(function() {var implementors = {};
implementors["chrono"] = [{"text":"impl Display for FixedOffset","synthetic":false,"types":[]},{"text":"impl Display for Utc","synthetic":false,"types":[]},{"text":"impl Display for NaiveDate","synthetic":false,"types":[]},{"text":"impl Display for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl Display for NaiveTime","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Display for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Tz::Offset: Display,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Display for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Tz::Offset: Display,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Display for ParseError","synthetic":false,"types":[]},{"text":"impl&lt;'a, I:&nbsp;Iterator&lt;Item = B&gt; + Clone, B:&nbsp;Borrow&lt;Item&lt;'a&gt;&gt;&gt; Display for DelayedFormat&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl Display for RoundingError","synthetic":false,"types":[]},{"text":"impl Display for Weekday","synthetic":false,"types":[]}];
implementors["colored"] = [{"text":"impl Display for ColoredString","synthetic":false,"types":[]}];
implementors["dotenv"] = [{"text":"impl Display for Error","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Display for Level","synthetic":false,"types":[]},{"text":"impl Display for LevelFilter","synthetic":false,"types":[]},{"text":"impl Display for SetLoggerError","synthetic":false,"types":[]},{"text":"impl Display for ParseLevelError","synthetic":false,"types":[]}];
implementors["num_traits"] = [{"text":"impl Display for ParseFloatError","synthetic":false,"types":[]}];
implementors["time"] = [{"text":"impl&lt;'a&gt; Display for TmFmt&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Display for Duration","synthetic":false,"types":[]},{"text":"impl Display for OutOfRangeError","synthetic":false,"types":[]},{"text":"impl Display for SteadyTime","synthetic":false,"types":[]},{"text":"impl Display for ParseError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()